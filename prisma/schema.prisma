generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider             = "mysql"
    url                  = env("DATABASE_URL")
    referentialIntegrity = "prisma"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    isAdmin       Boolean?
    accounts      Account[]
    sessions      Session[]
    Review        Review[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Anime {
    id                 Int      @id @default(autoincrement())
    title              String
    title_english      String
    image              String   @db.VarChar(255)
    description        String   @db.Text
    waitingForApproval Boolean?
    Review             Review[]
}

model Review {
    id      Int     @id @default(autoincrement())
    review  Int
    comment String?
    user    User    @relation(fields: [userId], references: [id])
    userId  String
    anime   Anime   @relation(fields: [animeId], references: [id])
    animeId Int
}
